generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model TripUpdate {
  id         String   @id @default(cuid())
  timestamp  String
  tripID     String
  trip       Trip     @relation(fields: [tripID], references: [id])
  positionID String
  position   Position @relation(fields: [positionID], references: [id])
  vehicleID  String
  vehicle    Vehicle  @relation(fields: [vehicleID], references: [id])
  createdAt  DateTime @default(now())
}

model Trip {
  id          String       @id @default(cuid())
  refID       String // The original ID from FeedEntity.entity[x].vehicle.trip.tripId
  startDate   String?
  startTime   String?
  routeID     String?
  directionID Int?
  tripUpdates TripUpdate[]
}

model Position {
  id         String       @id @default(cuid())
  latitude   Float
  longitude  Float
  bearing    Int?
  speed      Float?
  TripUpdate TripUpdate[]
}

model Vehicle {
  id              String        @id @default(cuid())
  refID           String        @unique // The original ID from FeedEntity.entity[x].vehicle.vehicle.id
  vehicleDetail   VehicleDetail @relation(fields: [vehicleDetailID], references: [id]) // Make this REQUIRED
  vehicleDetailID String
  TripUpdate      TripUpdate[]
}

model VehicleType {
  id            String          @id @default(cuid())
  name          String          @unique
  VehicleDetail VehicleDetail[]
}

model VehicleDetail {
  id            String       @id @default(cuid())
  label         String?      @unique // The label of the vehicle (if available)
  licensePlate  String?      @unique // Added from the new data (e.g., "MUY9570")
  vehicleTypeID String?
  vehicleType   VehicleType? @relation(fields: [vehicleTypeID], references: [id])
  Vehicle       Vehicle[]
  createdAt     DateTime     @default(now())
}
